<!-- Program to retrieve employee numbers & salaries from given text by using regular expressions -->
<html>
<body>
<script>
let text=`Employee number is 101 and his salary is 50000.00, one more employee number is 102 and his salary is 55000.00 & another employee number is 103 and his salary 65000.00.`;
let pattern1=/[1][0-9]{2}/g;
let pattern2=/[0-9]{5}.[0-9]{2}/g;
let empNos=text.matchAll(pattern1);
for(let empNo of empNos)
{
	document.write(empNo+"<br>");
}
let salaries=text.matchAll(pattern2);
for(let salary of salaries)
{
	document.write(salary+"<br>");
}
</script>
</body>
</html>


<!-- Program to retrieve mail ids from given text by using regular expressions -->
<html>
<body>
<script>
let text=`Employee number is 101 and his mail id is aaa_abc@gmail.com, one more employee number is 102 and his mail id is xyz2023@yahoo.com & another employee number is 103 and his mail id is venkatesh.mansani@yahoo.com.`;
let pattern=/[a-z0-9_.]{3,20}@[a-z]{5,10}.com/g;
let mailids=text.matchAll(pattern);
for(let mailid of mailids)
{
	document.write(mailid+"<br>");
}
</script>
</body>
</html>

<!-- Program to check regular expressions by using 
test() method of RegExp object -->
<html>
<body>
<script>
let re1=new RegExp("^he");
document.write(re1.test("hello"));
document.write(re1.test("welcome"));
let re2=new RegExp("come$");
document.write(re2.test("hello"));
document.write(re2.test("welcome"));
let re3=new RegExp("^he..o$");
document.write(re3.test("hello"));
document.write(re3.test("welcome"));
</script>
</body>
</html>

Object Oriented Programming In Java Script:
======================================
Initially Java Script was introduced object based & now
it is an object oriented.

A language that supports all the principles of an object
oriented programming is called as an object oriented
programming language.

Object Oriented Principles(OOPs):
=============================
1) Encapsulation
2) Abstraction
3) Inheritance
4) Polymorphism

To use the principles in Java Script, we need the 
following language constructs:
1) Class
2) Object

Class:
=====
A class is a collection of variables & methods.

Syntax:
======
class ClassName
{
	variable1=literal1;
	variable2=literal2;
	===============
	method1(parameter1, parameter2, ...)
	{
		=========;
		=========;
	}
	===============
}

There are two types of variables:
============================
1) Instance Variables(Non static variables)
2) Class Variables(Static variables)

There are two types of methods:
===========================
1) Instance Methods(Non static methods)
2) Class Methods(Static methods)

Object:
======
An object is an instance of a class.

Syntax:
======
let object-reference=new Constructor();

Here new is a dynamic memory allocation operator & it
allocates the memory to instance variables dynamically
at run time.
Constructor constructs the object.




